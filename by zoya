
        String[] columns = {"Item Name", "Price", "Stock"};
        tableModel = new DefaultTableModel(columns, 0);
        itemsTable = new JTable(tableModel);
        JScrollPane tableScroll = new JScrollPane(itemsTable);
        tableScroll.setPreferredSize(new Dimension(900, 300));
        itemsTable.setBackground(tableRowColor);
        itemsTable.getTableHeader().setBackground(tableHeaderColor);
        itemsTable.setFont(new Font("Arial", Font.PLAIN, 14));
        add(tableScroll);

        JButton displayButton = new JButton("Display Items");
        JButton addStockButton = new JButton("Add Stock");
        JButton generateSlipButton = new JButton("Generate Slip");
        JButton exitButton = new JButton("Exit");

        displayButton.setBackground(buttonColor);
        addStockButton.setBackground(buttonColor);
        generateSlipButton.setBackground(buttonColor);
        exitButton.setBackground(buttonColor);

        displayButton.setFont(new Font("Arial", Font.BOLD, 14));
        addStockButton.setFont(new Font("Arial", Font.BOLD, 14));
        generateSlipButton.setFont(new Font("Arial", Font.BOLD, 14));
        exitButton.setFont(new Font("Arial", Font.BOLD, 14));

        add(displayButton);
        add(addStockButton);
        add(generateSlipButton);
        add(exitButton);

        displayButton.addActionListener(e -> displayItems());
        addStockButton.addActionListener(e -> addStock());
        generateSlipButton.addActionListener(e -> generateSlip());
        exitButton.addActionListener(e -> System.exit(0));

        setVisible(true);
    }

    private void displayItems() {
        tableModel.setRowCount(0);
        for (BakeryItem item : items) {
            tableModel.addRow(new Object[]{item.name, "$" + item.price, item.quantity});
        }
    }

    private void addStock() {
        JPanel addStockPanel = new JPanel(new GridLayout(9, 2));
        JTextField breadQty = new JTextField();
        JTextField cookieQty = new JTextField();
        JTextField croissantQty = new JTextField();
        JTextField muffinQty = new JTextField();
        JTextField pieQty = new JTextField();
        JTextField brownieQty = new JTextField();
        JTextField donutQty = new JTextField();
        JTextField cakeQty = new JTextField();

        addStockPanel.add(new JLabel("Bread Quantity:"));
        addStockPanel.add(breadQty);
        addStockPanel.add(new JLabel("Cookies Quantity:"));
        addStockPanel.add(cookieQty);
        addStockPanel.add(new JLabel("Croissant Quantity:"));
        addStockPanel.add(croissantQty);
        addStockPanel.add(new JLabel("Muffin Quantity:"));
        addStockPanel.add(muffinQty);
        addStockPanel.add(new JLabel("Pie Quantity:"));
        addStockPanel.add(pieQty);
        addStockPanel.add(new JLabel("Brownie Quantity:"));
        addStockPanel.add(brownieQty);
        addStockPanel.add(new JLabel("Donut Quantity:"));
        addStockPanel.add(donutQty);
        addStockPanel.add(new JLabel("Cake Quantity:"));
        addStockPanel.add(cakeQty);

        JButton sellItemButton = new JButton("Sell Item");
        sellItemButton.addActionListener(e -> {
            processAddStock(breadQty, "Bread");
            processAddStock(cookieQty, "Cookies");
            processAddStock(croissantQty, "Croissant");
            processAddStock(muffinQty, "Muffin");
            processAddStock(pieQty, "Pie");
            processAddStock(brownieQty, "Brownie");
            processAddStock(donutQty, "Donut");
            processAddStock(cakeQty, "Cake");
            displayItems();
            sellItem(); // After adding stock, go to sell item window
        });

        addStockPanel.add(sellItemButton);

        JOptionPane.showConfirmDialog(this, addStockPanel, "Add Stock", JOptionPane.OK_CANCEL_OPTION);
    }

    private void processAddStock(JTextField qtyField, String itemName) {
        if (!qtyField.getText().isEmpty()) {
            try {
                int qty = Integer.parseInt(qtyField.getText());
                for (BakeryItem item : items) {
                    if (item.name.equals(itemName)) {
                        item.addStock(qty);
                    }
                }
            } catch (NumberFormatException ex) {
                // Skip invalid entries
            }
        }
    }
